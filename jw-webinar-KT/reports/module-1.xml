<?xml version="1.0" encoding="UTF-8"?>
<testsuites name="Mocha Tests" time="0.0250" tests="46" failures="0">
  <testsuite name="Root Suite" timestamp="2022-10-27T14:28:18" tests="0" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="Module 1 - Classification" timestamp="2022-10-27T14:28:18" tests="22" file="C:\Users\Balazs_Cservenak\Documents\KT\-Maintenance-Upgrade-QA-KT\jw-webinar-KT\module-1\test\classification.spec.js" time="0.0140" failures="0">
    <testcase name="Module 1 - Classification should return a number" time="0.0010" classname="should return a number">
    </testcase>
    <testcase name="Module 1 - Classification should return 0 if score is negative" time="0.0000" classname="should return 0 if score is negative">
    </testcase>
    <testcase name="Module 1 - Classification should return 0 if score is bigger than the maximum (100)" time="0.0000" classname="should return 0 if score is bigger than the maximum (100)">
    </testcase>
    <testcase name="Module 1 - Classification should return 1 for 0" time="0.0000" classname="should return 1 for 0">
    </testcase>
    <testcase name="Module 1 - Classification should return 1 for 58" time="0.0000" classname="should return 1 for 58">
    </testcase>
    <testcase name="Module 1 - Classification should return 1 for 59" time="0.0000" classname="should return 1 for 59">
    </testcase>
    <testcase name="Module 1 - Classification should return 2 for 60" time="0.0000" classname="should return 2 for 60">
    </testcase>
    <testcase name="Module 1 - Classification should return 2 for 61" time="0.0000" classname="should return 2 for 61">
    </testcase>
    <testcase name="Module 1 - Classification should return 2 for 68" time="0.0000" classname="should return 2 for 68">
    </testcase>
    <testcase name="Module 1 - Classification should return 2 for 69" time="0.0000" classname="should return 2 for 69">
    </testcase>
    <testcase name="Module 1 - Classification should return 3 for 70" time="0.0000" classname="should return 3 for 70">
    </testcase>
    <testcase name="Module 1 - Classification should return 3 for 71" time="0.0000" classname="should return 3 for 71">
    </testcase>
    <testcase name="Module 1 - Classification should return 3 for 78" time="0.0000" classname="should return 3 for 78">
    </testcase>
    <testcase name="Module 1 - Classification should return 3 for 79" time="0.0000" classname="should return 3 for 79">
    </testcase>
    <testcase name="Module 1 - Classification should return 4 for 80" time="0.0000" classname="should return 4 for 80">
    </testcase>
    <testcase name="Module 1 - Classification should return 4 for 81" time="0.0000" classname="should return 4 for 81">
    </testcase>
    <testcase name="Module 1 - Classification should return 4 for 88" time="0.0000" classname="should return 4 for 88">
    </testcase>
    <testcase name="Module 1 - Classification should return 4 for 89" time="0.0000" classname="should return 4 for 89">
    </testcase>
    <testcase name="Module 1 - Classification should return 5 for 90" time="0.0000" classname="should return 5 for 90">
    </testcase>
    <testcase name="Module 1 - Classification should return 5 for 91" time="0.0000" classname="should return 5 for 91">
    </testcase>
    <testcase name="Module 1 - Classification should return 5 for 99" time="0.0000" classname="should return 5 for 99">
    </testcase>
    <testcase name="Module 1 - Classification should return 5 for 100" time="0.0000" classname="should return 5 for 100">
    </testcase>
  </testsuite>
  <testsuite name="Module 1 - Euclidean algorithm" timestamp="2022-10-27T14:28:18" tests="8" file="C:\Users\Balazs_Cservenak\Documents\KT\-Maintenance-Upgrade-QA-KT\jw-webinar-KT\module-1\test\euclidean.spec.js" time="0.0020" failures="0">
    <testcase name="Module 1 - Euclidean algorithm should return a number" time="0.0000" classname="should return a number">
    </testcase>
    <testcase name="Module 1 - Euclidean algorithm should return 0 if negative value passed" time="0.0000" classname="should return 0 if negative value passed">
    </testcase>
    <testcase name="Module 1 - Euclidean algorithm should return 1 for (1,1)" time="0.0000" classname="should return 1 for (1,1)">
    </testcase>
    <testcase name="Module 1 - Euclidean algorithm should return 1 for (1,7)" time="0.0000" classname="should return 1 for (1,7)">
    </testcase>
    <testcase name="Module 1 - Euclidean algorithm should return 16 for (128,16)" time="0.0000" classname="should return 16 for (128,16)">
    </testcase>
    <testcase name="Module 1 - Euclidean algorithm should return 1 for (7,9)" time="0.0000" classname="should return 1 for (7,9)">
    </testcase>
    <testcase name="Module 1 - Euclidean algorithm should return 3 for (6,9)" time="0.0010" classname="should return 3 for (6,9)">
    </testcase>
    <testcase name="Module 1 - Euclidean algorithm should return 1 for (683,997)" time="0.0000" classname="should return 1 for (683,997)">
    </testcase>
  </testsuite>
  <testsuite name="Module 1 - Fibonacci" timestamp="2022-10-27T14:28:18" tests="16" file="C:\Users\Balazs_Cservenak\Documents\KT\-Maintenance-Upgrade-QA-KT\jw-webinar-KT\module-1\test\fibonacci.spec.js" time="0.0050" failures="0">
    <testcase name="Module 1 - Fibonacci should return a number" time="0.0010" classname="should return a number">
    </testcase>
    <testcase name="Module 1 - Fibonacci should return 0 if negative value passed" time="0.0000" classname="should return 0 if negative value passed">
    </testcase>
    <testcase name="Module 1 - Fibonacci should return 1 for 1" time="0.0000" classname="should return 1 for 1">
    </testcase>
    <testcase name="Module 1 - Fibonacci should return 1 for 2" time="0.0000" classname="should return 1 for 2">
    </testcase>
    <testcase name="Module 1 - Fibonacci should return 2 for 3" time="0.0000" classname="should return 2 for 3">
    </testcase>
    <testcase name="Module 1 - Fibonacci should return 3 for 4" time="0.0000" classname="should return 3 for 4">
    </testcase>
    <testcase name="Module 1 - Fibonacci should return 5 for 5" time="0.0000" classname="should return 5 for 5">
    </testcase>
    <testcase name="Module 1 - Fibonacci should return 8 for 6" time="0.0000" classname="should return 8 for 6">
    </testcase>
    <testcase name="Module 1 - Fibonacci should return 13 for 7" time="0.0000" classname="should return 13 for 7">
    </testcase>
    <testcase name="Module 1 - Fibonacci should return 21 for 8" time="0.0000" classname="should return 21 for 8">
    </testcase>
    <testcase name="Module 1 - Fibonacci should return 34 for 9" time="0.0000" classname="should return 34 for 9">
    </testcase>
    <testcase name="Module 1 - Fibonacci should return 55 for 10" time="0.0000" classname="should return 55 for 10">
    </testcase>
    <testcase name="Module 1 - Fibonacci should return 89 for 11" time="0.0000" classname="should return 89 for 11">
    </testcase>
    <testcase name="Module 1 - Fibonacci should return 144 for 12" time="0.0000" classname="should return 144 for 12">
    </testcase>
    <testcase name="Module 1 - Fibonacci should return 233 for 13" time="0.0000" classname="should return 233 for 13">
    </testcase>
    <testcase name="Module 1 - Fibonacci should return 377 for 14" time="0.0000" classname="should return 377 for 14">
    </testcase>
  </testsuite>
</testsuites>